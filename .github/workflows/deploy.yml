name: Deploy Go App to Production

on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: self-hosted
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true

      - name: Build Go binary
        run: |
          mkdir -p build
          if [ ! -f main.go ]; then
            echo "‚ùå –§–∞–π–ª main.go –Ω–µ –Ω–∞–π–¥–µ–Ω!"
            exit 1
          fi
          GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o build/goapp main.go
          ls -lh build/

      - name: Setup SSH
        run: |
          set -ex
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          # –î–ª—è Windows –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —è–≤–Ω–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∞ —Å—Ç—Ä–æ–∫–∏
          sed -i 's/\r$//' ~/.ssh/id_ed25519

      - name: Deploy to Production
        run: |
          echo "üöÄ –ö–æ–ø–∏—Ä—É–µ–º Go-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –ø—Ä–æ–¥..."
          scp -P 5692 -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no \
            build/goapp ${{ secrets.PROD_USER }}@${{ secrets.PROD_HOST }}:~/goapp

      - name: Start Application on Production
        run: |
          echo "‚öôÔ∏è –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Go-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
          ssh -p 5692 -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no \
            ${{ secrets.PROD_USER }}@${{ secrets.PROD_HOST }} << 'EOF'
            #!/bin/bash
            pkill goapp || true
            chmod +x ~/goapp
            nohup ~/goapp > ~/goapp.log 2>&1 &
            sleep 2
            pgrep goapp && echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ (PID: $(pgrep goapp))" || echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
          EOF

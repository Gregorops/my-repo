name: Deploy Go App to Production

on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: self-hosted
    defaults:
      run:
        shell: powershell
        working-directory: ${{ github.workspace }}

    steps:
      - name: Test SSH connection
        run: |
          # Проверяем наличие SSH клиента
          if (-not (Test-Path $env:SSH_PATH)) {
              Write-Output "::error::SSH executable not found at $env:SSH_PATH"
              exit 1
          }

          # Формируем корректную SSH команду
          $sshCommand = @"
          & "$env:SSH_PATH" -T -p 5692 -i "$env:USERPROFILE\.ssh\id_ed25519" `
            -o StrictHostKeyChecking=no `
            -o ConnectTimeout=10 `
            "$env:PROD_USER@$env:PROD_HOST" `
            "echo 'SSH test successful'"
          "@

          Write-Output "Executing SSH test command:"
          Write-Output $sshCommand

          try {
              # Выполняем команду
              Invoke-Expression $sshCommand
              
              # Проверяем код возврата
              if ($LASTEXITCODE -ne 0) {
                  throw "SSH connection failed with exit code $LASTEXITCODE"
              }
              
              Write-Output "✅ SSH connection successful"
          } catch {
              Write-Output "::error::❌ SSH connection failed: $_"
              
              # Дополнительная диагностика
              Write-Output "=== Debug information ==="
              Write-Output "SSH path: $env:SSH_PATH"
              if (Test-Path "$env:USERPROFILE\.ssh\id_ed25519") {
                  Write-Output "SSH key permissions:"
                  icacls "$env:USERPROFILE\.ssh\id_ed25519"
              } else {
                  Write-Output "SSH key not found at $env:USERPROFILE\.ssh\id_ed25519"
              }
              
              exit 1
          }
        env:
          SSH_PATH: C:\Windows\System32\OpenSSH\ssh.exe
          PROD_USER: ${{ secrets.PROD_USER }}
          PROD_HOST: ${{ secrets.PROD_HOST }}
